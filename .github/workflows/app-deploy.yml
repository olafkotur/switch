# [x] Pull latest code from main/app
# [x] Run yarn install to download libraries
# [x] Get values for APPLE credentials
# [x] Pull certificates (Developer ID and Provisioning Profile)
# [x] Save Provisioning Profile in /app
# [x] Run yarn package to create a signed application
# [] Create a new release with .dmg and .zip files in switch-releases repository
# [] Create a pull request in switch-releases containing changes in updates.json and releases.json
# [] Update the release .dmg location in /site

name: app-deploy
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: macos-latest
    env:
      WORKING_DIRECTORY: ./app
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Add Certificates to Keychain
        env:
          WORKING_DIRECTORY: ./app
        run: |
          echo "${{ secrets.APPLE_CERTIFICATE }}" | base64 --decode > certificate.p12
          echo "${{ secrets.APPLE_PROVISION_PROFILE }}" | base64 --decode > ./app/Switch.provisionprofile
          security create-keychain -p mysecretpassword build.keychain
          security import certificate.p12 -k ~/Library/Keychains/build.keychain -P mycertificatepassword -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple: -s -k mysecretpassword build.keychain
          security set-keychain-settings -lut 7200 ~/Library/Keychains/build.keychain
          security unlock-keychain -p mysecretpassword ~/Library/Keychains/build.keychain
          security import ./app/Switch.provisionprofile -k ~/Library/MobileDevice/Provisioning\ Profiles/
          security find-identity -v -p codesigning | grep "Developer ID Application" | awk '{print $2}' | xargs -I{} security import -k ~/Library/Keychains/build.keychain -P {} -T /usr/bin/codesign
        shell: /bin/bash -e

      - name: Install Dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --frozen-lockfile

      - name: Run yarn package
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn package
