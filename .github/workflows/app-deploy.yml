# [x] Pull latest code from main/app
# [x] Run yarn install to download libraries
# [x] Get values for APPLE credentials
# [x] Pull certificates (Developer ID and Provisioning Profile)
# [x] Save Provisioning Profile in /app
# [x] Run yarn package to create a signed application
# [] Create a new release with .dmg and .zip files in switch-releases repository
# [] Create a pull request in switch-releases containing changes in updates.json and releases.json
# [] Update the release .dmg location in /site

name: app-deploy
on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: macos-latest
    env:
      WORKING_DIRECTORY: ./app
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Add Certificates to Keychain
        env:
          WORKING_DIRECTORY: ./app
          BUILD_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE }}
          P12_PASSWORD: ${{ secrets.APPLE_SECRETS_PASSWORD }}
          BUILD_PROVISION_PROFILE_BASE64: ${{ secrets.APPLE_PROVISION_PROFILE }}
          KEYCHAIN_PASSWORD: ${{ secrets.APPLE_SECRETS_PASSWORD }}
        run: |
          # create variables
          CERTIFICATE_PATH=$RUNNER_TEMP/build_certificate.p12
          PP_PATH=$RUNNER_TEMP/build_pp.provisionprofile
          KEYCHAIN_PATH=$RUNNER_TEMP/app-signing.keychain-db

          # import certificate and provisioning profile from secrets
          echo -n "$BUILD_CERTIFICATE_BASE64" | base64 --decode -o $CERTIFICATE_PATH
          echo -n "$BUILD_PROVISION_PROFILE_BASE64" | base64 --decode -o $PP_PATH

          # create temporary keychain
          security create-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH
          security set-keychain-settings -lut 21600 $KEYCHAIN_PATH
          security unlock-keychain -p "$KEYCHAIN_PASSWORD" $KEYCHAIN_PATH

          # import certificate to keychain
          security import $CERTIFICATE_PATH -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k $KEYCHAIN_PATH
          security list-keychain -d user -s $KEYCHAIN_PATH

          # apply provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $PP_PATH ~/Library/MobileDevice/Provisioning\ Profiles

      - name: Install Dependencies
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn install --frozen-lockfile

      - name: Run yarn package
        working-directory: ${{ env.WORKING_DIRECTORY }}
        run: yarn package
